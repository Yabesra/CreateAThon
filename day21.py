# -*- coding: utf-8 -*-
"""Day21

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/138lSuFWRKmu-HOR6cRrFZnQtc7-VE62G

#How to Use the UpSampling2D Layer
"""

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten, Conv2D, MaxPooling2D, Dropout, experimental, MaxPool2D, BatchNormalization, UpSampling2D
from tensorflow.keras.losses import sparse_categorical_crossentropy, binary_crossentropy

import numpy as np
X = np.asarray([[1, 2],
			 [3, 4]])

print(X)

X = X.reshape((1, 2, 2, 1))

model = Sequential()
model.add(UpSampling2D(input_shape=(2, 2, 1)))
model.summary()

yhat = model.predict(X)

model.add(UpSampling2D(size=(2, 3)))

model.add(UpSampling2D(interpolation='bilinear'))
model.summary()

"""#Simple Generator Model With the UpSampling2D Layer"""

from keras.models import Sequential
from keras.layers import Dense, Reshape, UpSampling2D, Conv2D

model = Sequential()
model.add(Dense(128 * 5 * 5, input_dim=100))
model.add(Reshape((5, 5, 128)))
model.add(UpSampling2D())
model.add(Conv2D(1, (3,3), padding="same"))
model.summary()

"""# Using the Conv2DTranspose Layer"""

from numpy import asarray
from keras.models import Sequential
from keras.layers import Conv2DTranspose

X = asarray([[1, 2],
			 [3, 4]])

print(X)

X = X.reshape((1, 2, 2, 1))

model = Sequential()
model.add(Conv2DTranspose(1, (1,1), strides=(2,2), input_shape=(2, 2, 1)))

model.summary()

weights = [asarray([[[[1]]]]), asarray([0])]

yhat = model.predict(X)

yhat = yhat.reshape((4, 4))

print(yhat)